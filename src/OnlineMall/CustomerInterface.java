/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OnlineMall;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author flossycat
 */
public class CustomerInterface extends javax.swing.JFrame {

    /**
     * Creates new form CustomerInterface
     */
      ArrayList <Products> Products;
    public CustomerInterface() {
        initComponents();
        
        Ads.setIcon(new ImageIcon("src\\DataBase\\Ads\\Customer1.jpg"));
         
       ProductA.setIcon (new ImageIcon("src\\DataBase\\Products\\Product1.jpg"));
       ProductB.setIcon (new ImageIcon("src\\DataBase\\Products\\Product2.jpg"));
       ProductC.setIcon (new ImageIcon("src\\DataBase\\Products\\Product3.jpg"));
       ProductD.setIcon (new ImageIcon("src\\DataBase\\Products\\Product4.jpg"));
       ProductE.setIcon (new ImageIcon("src\\DataBase\\Products\\Product5.jpg"));
       ProductF.setIcon (new ImageIcon("src\\DataBase\\Products\\Product6.jpg"));
        
        Products = new ArrayList<Products>();  
            
                 
            
         try
        {
        
            FileInputStream file = new FileInputStream("src\\DataBase\\Products.dat");
            ObjectInputStream inputFile = new ObjectInputStream(file);
        boolean endOfFile = false;
        
        while (!endOfFile){
            
            try 
            {
              Products.add((Products) inputFile.readObject());
                
            }
            catch (EOFException e)
            {
                endOfFile = true;
            }
            catch (Exception f)
            {
             JOptionPane.showMessageDialog(null, f.getMessage());
            }
        }
        
        inputFile.close();
        }
        catch (IOException e){
            
            JOptionPane.showMessageDialog(null, e.getMessage());
            
        }
        
            
          
         for (int i=0;i<Products.size();i++) {
           
          
        switch (i){
           
            case 0:
      Stock1.setText(Products.get(i).getStock());
      Price1.setText(Products.get(i).getPrice()); 
            break;
            case 1:
      Stock2.setText(Products.get(i).getStock());
      Price2.setText(Products.get(i).getPrice());   
            break;   
            case 2:
      Stock3.setText(Products.get(i).getStock());
      Price3.setText(Products.get(i).getPrice());   
            break;
            case 3:
      Stock4.setText(Products.get(i).getStock());
      Price4.setText(Products.get(i).getPrice());   
            break;
            case 4:
      Stock5.setText(Products.get(i).getStock());
      Price5.setText(Products.get(i).getPrice());   
            break;
            case 5:
      Stock6.setText(Products.get(i).getStock());
      Price6.setText(Products.get(i).getPrice());   
            break;
            default:
            break;
        }
                 
        }
          
         
          
       
     
            
            
                
                
        
             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ads = new javax.swing.JLabel();
        ViewProduct3 = new javax.swing.JButton();
        Price3 = new javax.swing.JLabel();
        StockLabelOfItem3 = new javax.swing.JLabel();
        Stock3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        SearchText = new javax.swing.JTextField();
        ViewProduct2 = new javax.swing.JButton();
        Price2 = new javax.swing.JLabel();
        StockLabelOfItem8 = new javax.swing.JLabel();
        Stock2 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        StockLabelOfItem9 = new javax.swing.JLabel();
        Stock8 = new javax.swing.JLabel();
        ViewProduct1 = new javax.swing.JButton();
        Price1 = new javax.swing.JLabel();
        StockLabelOfItem10 = new javax.swing.JLabel();
        Stock1 = new javax.swing.JLabel();
        ViewProduct4 = new javax.swing.JButton();
        Price4 = new javax.swing.JLabel();
        StockLabelOfItem11 = new javax.swing.JLabel();
        Stock4 = new javax.swing.JLabel();
        ViewProduct5 = new javax.swing.JButton();
        Price5 = new javax.swing.JLabel();
        StockLabelOfItem12 = new javax.swing.JLabel();
        Stock5 = new javax.swing.JLabel();
        ViewProduct6 = new javax.swing.JButton();
        Price6 = new javax.swing.JLabel();
        StockLabelOfItem13 = new javax.swing.JLabel();
        Stock6 = new javax.swing.JLabel();
        ProductF = new javax.swing.JLabel();
        ProductA = new javax.swing.JLabel();
        ProductB = new javax.swing.JLabel();
        ProductC = new javax.swing.JLabel();
        ProductD = new javax.swing.JLabel();
        ProductE = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Price8 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1232, 648));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(Ads, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1230, 130));

        ViewProduct3.setText("View Product");
        ViewProduct3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProduct3ActionPerformed(evt);
            }
        });
        getContentPane().add(ViewProduct3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 570, 170, -1));

        Price3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Price3.setText("0.00$");
        getContentPane().add(Price3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 500, 100, 23));

        StockLabelOfItem3.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        StockLabelOfItem3.setForeground(new java.awt.Color(0, 0, 255));
        StockLabelOfItem3.setText(" left in stock (order now).");
        getContentPane().add(StockLabelOfItem3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 530, 150, 20));

        Stock3.setText("0");
        getContentPane().add(Stock3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 530, 20, 20));

        jButton7.setText("High to Low");
        jButton7.setToolTipText("");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 150, 140, 20));

        jButton8.setText("Search Product");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 140, 180, 40));
        getContentPane().add(SearchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 480, 40));

        ViewProduct2.setText("View Product");
        ViewProduct2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProduct2ActionPerformed(evt);
            }
        });
        getContentPane().add(ViewProduct2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 570, 170, -1));

        Price2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Price2.setText("0.00$");
        getContentPane().add(Price2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 500, 100, 23));

        StockLabelOfItem8.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        StockLabelOfItem8.setForeground(new java.awt.Color(0, 0, 255));
        StockLabelOfItem8.setText(" left in stock (order now).");
        getContentPane().add(StockLabelOfItem8, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 530, 150, 20));

        Stock2.setText("0");
        getContentPane().add(Stock2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 530, 20, 20));

        jButton10.setText("View Product");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 570, 170, -1));

        StockLabelOfItem9.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        StockLabelOfItem9.setForeground(new java.awt.Color(0, 0, 255));
        StockLabelOfItem9.setText(" left in stock (order now).");
        getContentPane().add(StockLabelOfItem9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 530, 150, 20));

        Stock8.setText("22");
        getContentPane().add(Stock8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 530, 20, 20));

        ViewProduct1.setText("View Product");
        ViewProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProduct1ActionPerformed(evt);
            }
        });
        getContentPane().add(ViewProduct1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 170, -1));

        Price1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Price1.setText("0.00$");
        getContentPane().add(Price1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, 100, 23));

        StockLabelOfItem10.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        StockLabelOfItem10.setForeground(new java.awt.Color(0, 0, 255));
        StockLabelOfItem10.setText(" left in stock (order now).");
        getContentPane().add(StockLabelOfItem10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 530, 150, 20));

        Stock1.setText("0");
        getContentPane().add(Stock1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, 20, 20));

        ViewProduct4.setText("View Product");
        ViewProduct4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProduct4ActionPerformed(evt);
            }
        });
        getContentPane().add(ViewProduct4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 570, 170, -1));

        Price4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Price4.setText("0.00$");
        getContentPane().add(Price4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 500, 100, 23));

        StockLabelOfItem11.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        StockLabelOfItem11.setForeground(new java.awt.Color(0, 0, 255));
        StockLabelOfItem11.setText(" left in stock (order now).");
        getContentPane().add(StockLabelOfItem11, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 530, 150, 20));

        Stock4.setText("0");
        getContentPane().add(Stock4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 530, 20, 20));

        ViewProduct5.setText("View Product");
        ViewProduct5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProduct5ActionPerformed(evt);
            }
        });
        getContentPane().add(ViewProduct5, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 570, 170, -1));

        Price5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Price5.setText("0.00$");
        getContentPane().add(Price5, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 500, 100, 23));

        StockLabelOfItem12.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        StockLabelOfItem12.setForeground(new java.awt.Color(0, 0, 255));
        StockLabelOfItem12.setText(" left in stock (order now).");
        getContentPane().add(StockLabelOfItem12, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 530, 150, 20));

        Stock5.setText("0");
        getContentPane().add(Stock5, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 530, 20, 20));

        ViewProduct6.setText("View Product");
        ViewProduct6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewProduct6ActionPerformed(evt);
            }
        });
        getContentPane().add(ViewProduct6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 570, 170, -1));

        Price6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Price6.setText("0.00$");
        getContentPane().add(Price6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 500, 100, 23));

        StockLabelOfItem13.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        StockLabelOfItem13.setForeground(new java.awt.Color(0, 0, 255));
        StockLabelOfItem13.setText(" left in stock (order now).");
        getContentPane().add(StockLabelOfItem13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 530, 150, 20));

        Stock6.setText("0");
        getContentPane().add(Stock6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 530, 20, 20));
        getContentPane().add(ProductF, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 340, 150, 150));
        getContentPane().add(ProductA, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 150, 150));
        getContentPane().add(ProductB, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 150, 150));
        getContentPane().add(ProductC, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 340, 150, 150));
        getContentPane().add(ProductD, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 330, 150, 150));
        getContentPane().add(ProductE, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 330, 150, 150));

        jButton9.setText("Low to High");
        jButton9.setToolTipText("");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 150, 140, 20));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Sort Products By Price:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 140, 160, 40));

        Price8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Price8.setIcon(new javax.swing.ImageIcon("C:\\Users\\JhonsonTheGreat\\Desktop\\OnlineMall\\src\\background.jpg")); // NOI18N
        getContentPane().add(Price8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1230, 630));
        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ViewProduct3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProduct3ActionPerformed
          new Product3Interface().setVisible(true);
    }//GEN-LAST:event_ViewProduct3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      
       
   for (int j=0;j<5;j++) {
       
       
       String TemporaryName;
       String TemporaryStock;
       String TemporaryDiscription;
       String TemporaryPrice;
       String TemporaryPicturePath;
       Float Price1;
       Float Price2;
       
         for (int i=0;i<Products.size();i++) {
        
        Price1 = Float.valueOf(Products.get(i).price.trim());
        Price2 = Float.valueOf(Products.get(i+1).price.trim());
             
            if (Price1 > Price2) {
                
                TemporaryPrice = Products.get(i).price;
                Products.get(i).price = Products.get(i+1).price;
                Products.get(i+1).price = TemporaryPrice;
                
                TemporaryDiscription = Products.get(i).Discription;
                Products.get(i).Discription = Products.get(i+1).Discription;
                Products.get(i+1).Discription= TemporaryDiscription;
                
                TemporaryStock = Products.get(i).stock;
                Products.get(i).stock = Products.get(i+1).stock;
                Products.get(i+1).stock = TemporaryStock;
                
                TemporaryName = Products.get(i).name;
                Products.get(i).name = Products.get(i+1).name;
                Products.get(i+1).name = TemporaryName;
                
                
                switch (i){
                    
                    case 0:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product1.jpg";
                   String Destination0A = "src\\DataBase\\Temp\\Product1.jpg";
                   

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination0A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   
                   
                   
                   String PathPicture0A = "src\\DataBase\\Products\\Product2.jpg";
                   String DestinationPicture0A = "src\\DataBase\\Products\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture0A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture0A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   
                   
                   
                   String PathPicture0B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture0B = "src\\DataBase\\Products\\Product2.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture0B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture0B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   
                   File f0 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f0.delete();
                   
                   break;
                    
                    
                    
                   case 1:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product2.jpg"; /////
                   String Destination1A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination1A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture1A = "src\\DataBase\\Products\\Product3.jpg";
                   String DestinationPicture1A = "src\\DataBase\\Products\\Product2.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture1A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture1A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture1B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture1B = "src\\DataBase\\Products\\Product3.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture1B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture1B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   
                   File f1 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f1.delete();
                   
                    break;
                           
                    
                    
                    case 2:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product3.jpg"; //////
                   String Destination2A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination2A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture2A = "src\\DataBase\\Products\\Product4.jpg";
                   String DestinationPicture2A = "src\\DataBase\\Products\\Product3.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture2A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture2A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture2B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture2B = "src\\DataBase\\Products\\Product4.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture2B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture2B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   File f2 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f2.delete();
                
                    break;

                    
                    case 3:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product4.jpg";///////
                   String Destination3A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination3A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture3A = "src\\DataBase\\Products\\Product5.jpg";
                   String DestinationPicture3A = "src\\DataBase\\Products\\Product4.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture3A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture3A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture3B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture3B = "src\\DataBase\\Products\\Product5.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture3B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture3B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   
                   File f3 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f3.delete();
                   
                    break;

                    case 4:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product5.jpg"; //////
                   String Destination4A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination4A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture4A = "src\\DataBase\\Products\\Product6.jpg";
                   String DestinationPicture4A = "src\\DataBase\\Products\\Product5.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture4A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture4A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture4B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture4B = "src\\DataBase\\Products\\Product6.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture4B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture4B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   File f4 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f4.delete();
                   
                    break;
                    

                    
                    default: 
                    break;
                }
                
            }
         }
         }
   
   try 
            {
              FileOutputStream file = new FileOutputStream("src\\DataBase\\Products.dat");
              ObjectOutputStream outputFile = new ObjectOutputStream(file);
                
              
              for (int i=0; i<Products.size(); i++){
                  
                  outputFile.writeObject(Products.get(i));
                  
              }
              
              outputFile.close();
              
           
            }
        
         catch (IOException e){
            
            JOptionPane.showMessageDialog(null, e.getMessage());
            
        }
        
   try
       {
        
           FileInputStream file = new FileInputStream("src\\DataBase\\Products.dat");
           ObjectInputStream inputFile = new ObjectInputStream(file);
        
      FileWriter fw6=new FileWriter("src\\DataBase\\ProductsData.txt");  
        
        
     for (int i=0;i<Products.size();i++){
           
           try 
           {
              
                   fw6.write( "\n" + Products.get(i).getName()+"\n" + Products.get(i).getPrice() + "\n" + Products.get(i).getStock()+ "\n" + Products.get(i).getDiscription()+ "\n" );
                  
           }
           catch (Exception f)
           {
            JOptionPane.showMessageDialog(null, f.getMessage());
           }
          
       }
       fw6.close();  
       
       inputFile.close();
       }
       catch (IOException e){
            
           JOptionPane.showMessageDialog(null, e.getMessage());
            
       }
   
     CustomerInterface c = new CustomerInterface ();

   
     
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        
      
         try
        {
        
            FileInputStream file = new FileInputStream("src\\DataBase\\Products.dat");
            ObjectInputStream inputFile = new ObjectInputStream(file);
        boolean endOfFile = false;
        
        while (!endOfFile){
            
            try 
            {
              Products.add((Products)inputFile.readObject());
                
            }
            catch (EOFException e)
            {
                endOfFile = true;
            }
            catch (Exception f)
            {
             JOptionPane.showMessageDialog(null, f.getMessage());
            }
        }
        
        inputFile.close();
        }
        catch (IOException e){
            
            JOptionPane.showMessageDialog(null, e.getMessage());
            
        }
        
            
       
       for (int a=0; a<Products.size(); a++){
           
       if (SearchText.getText().trim().equals(Products.get(a).getName())){
       
        switch (a){
            case 0:
                 new Product1Interface().setVisible(true);
            break;
             case 1:
                 new Product2Interface().setVisible(true);
            break;
             case 2:
                 new Product3Interface().setVisible(true);
            break;
             case 3:
                 new Product4Interface().setVisible(true);
            break;
             case 4:
                 new Product5Interface().setVisible(true);
            break;
             case 5:
                 new Product6Interface().setVisible(true);
            break;
            default:
            break;
            
        }
        
        
        }else {JOptionPane.showMessageDialog(null, " Product not found, make sure you type the name correctly");}
       
       }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void ViewProduct2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProduct2ActionPerformed
          new Product2Interface().setVisible(true);
    }//GEN-LAST:event_ViewProduct2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void ViewProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProduct1ActionPerformed
       new Product1Interface().setVisible(true);
    }//GEN-LAST:event_ViewProduct1ActionPerformed

    private void ViewProduct4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProduct4ActionPerformed
        new Product4Interface().setVisible(true);
    }//GEN-LAST:event_ViewProduct4ActionPerformed

    private void ViewProduct5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProduct5ActionPerformed
         new Product5Interface().setVisible(true);
    }//GEN-LAST:event_ViewProduct5ActionPerformed

    private void ViewProduct6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewProduct6ActionPerformed
         new Product6Interface().setVisible(true);
    }//GEN-LAST:event_ViewProduct6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
      for (int j=0;j<5;j++) {
       
       
       String TemporaryName;
       String TemporaryStock;
       String TemporaryDiscription;
       String TemporaryPrice;
       String TemporaryPicturePath;
       Float Price1;
       Float Price2;
       
         for (int i=0;i<Products.size();i++) {
        
        Price1 = Float.valueOf(Products.get(i).price.trim());
        Price2 = Float.valueOf(Products.get(i+1).price.trim());
             
            if (Price1 < Price2) {
                
                TemporaryPrice = Products.get(i).price;
                Products.get(i).price = Products.get(i+1).price;
                Products.get(i+1).price = TemporaryPrice;
                
                TemporaryDiscription = Products.get(i).Discription;
                Products.get(i).Discription = Products.get(i+1).Discription;
                Products.get(i+1).Discription= TemporaryDiscription;
                
                TemporaryStock = Products.get(i).stock;
                Products.get(i).stock = Products.get(i+1).stock;
                Products.get(i+1).stock = TemporaryStock;
                
                TemporaryName = Products.get(i).name;
                Products.get(i).name = Products.get(i+1).name;
                Products.get(i+1).name = TemporaryName;
                
                
                switch (i){
                    
                    case 0:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product1.jpg";
                   String Destination0A = "src\\DataBase\\Temp\\Product1.jpg";
                   

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination0A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   
                   
                   
                   String PathPicture0A = "src\\DataBase\\Products\\Product2.jpg";
                   String DestinationPicture0A = "src\\DataBase\\Products\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture0A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture0A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   
                   
                   
                   String PathPicture0B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture0B = "src\\DataBase\\Products\\Product2.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture0B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture0B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   
                   File f0 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f0.delete();
                   
                   break;
                    
                    
                    
                   case 1:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product2.jpg"; /////
                   String Destination1A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination1A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture1A = "src\\DataBase\\Products\\Product3.jpg";
                   String DestinationPicture1A = "src\\DataBase\\Products\\Product2.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture1A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture1A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture1B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture1B = "src\\DataBase\\Products\\Product3.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture1B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture1B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   
                   File f1 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f1.delete();
                   
                    break;
                           
                    
                    
                    case 2:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product3.jpg"; //////
                   String Destination2A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination2A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture2A = "src\\DataBase\\Products\\Product4.jpg";
                   String DestinationPicture2A = "src\\DataBase\\Products\\Product3.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture2A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture2A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture2B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture2B = "src\\DataBase\\Products\\Product4.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture2B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture2B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   File f2 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f2.delete();
                
                    break;

                    
                    case 3:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product4.jpg";///////
                   String Destination3A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination3A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture3A = "src\\DataBase\\Products\\Product5.jpg";
                   String DestinationPicture3A = "src\\DataBase\\Products\\Product4.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture3A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture3A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture3B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture3B = "src\\DataBase\\Products\\Product5.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture3B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture3B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   
                   File f3 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f3.delete();
                   
                    break;

                    case 4:
                
                   TemporaryPicturePath = "src\\DataBase\\Products\\Product5.jpg"; //////
                   String Destination4A = "src\\DataBase\\Temp\\Product1.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(TemporaryPicturePath).getChannel();
                   FileChannel destination = new FileOutputStream(Destination4A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                   
                   
                   //--------------------
                   
                   String PathPicture4A = "src\\DataBase\\Products\\Product6.jpg";
                   String DestinationPicture4A = "src\\DataBase\\Products\\Product5.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture4A).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture4A).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                    
                   
                   //--------------------
                   
                   String PathPicture4B = "src\\DataBase\\Temp\\Product1.jpg";
                   String DestinationPicture4B = "src\\DataBase\\Products\\Product6.jpg";

                   try {
    
                   FileChannel Source = new FileInputStream(PathPicture4B).getChannel();
                   FileChannel destination = new FileOutputStream(DestinationPicture4B).getChannel();
                   destination.transferFrom(Source, 0, Source.size());

  
                    Source.close();
                    destination.close();

                    } catch (IOException e) {
                    e.printStackTrace();
                    }  
                
                   File f4 = new File("src\\DataBase\\Temp\\Product1.jpg");
                   f4.delete();
                   
                    break;
                    

                    
                    default: 
                    break;
                }
                
            }
         }
         }
   
   try 
            {
              FileOutputStream file = new FileOutputStream("src\\DataBase\\Products.dat");
              ObjectOutputStream outputFile = new ObjectOutputStream(file);
                
              
              for (int i=0; i<Products.size(); i++){
                  
                  outputFile.writeObject(Products.get(i));
                  
              }
              
              outputFile.close();
              
           
            }
        
         catch (IOException e){
            
            JOptionPane.showMessageDialog(null, e.getMessage());
            
        }
        
   try
       {
        
           FileInputStream file = new FileInputStream("src\\DataBase\\Products.dat");
           ObjectInputStream inputFile = new ObjectInputStream(file);
        
      FileWriter fw6=new FileWriter("src\\DataBase\\ProductsData.txt");  
        
        
     for (int i=0;i<Products.size();i++){
           
           try 
           {
              
                   fw6.write( "\n" + Products.get(i).getName()+"\n" + Products.get(i).getPrice() + "\n" + Products.get(i).getStock()+ "\n" + Products.get(i).getDiscription()+ "\n" );
                  
           }
           catch (Exception f)
           {
            JOptionPane.showMessageDialog(null, f.getMessage());
           }
          
       }
       fw6.close();  
       
       inputFile.close();
       }
       catch (IOException e){
            
           JOptionPane.showMessageDialog(null, e.getMessage());
            
       }
   
     CustomerInterface c = new CustomerInterface ();

    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ads;
    private javax.swing.JLabel Price1;
    private javax.swing.JLabel Price2;
    private javax.swing.JLabel Price3;
    private javax.swing.JLabel Price4;
    private javax.swing.JLabel Price5;
    private javax.swing.JLabel Price6;
    private javax.swing.JLabel Price8;
    private javax.swing.JLabel ProductA;
    private javax.swing.JLabel ProductB;
    private javax.swing.JLabel ProductC;
    private javax.swing.JLabel ProductD;
    private javax.swing.JLabel ProductE;
    private javax.swing.JLabel ProductF;
    private javax.swing.JTextField SearchText;
    private javax.swing.JLabel Stock1;
    private javax.swing.JLabel Stock2;
    private javax.swing.JLabel Stock3;
    private javax.swing.JLabel Stock4;
    private javax.swing.JLabel Stock5;
    private javax.swing.JLabel Stock6;
    private javax.swing.JLabel Stock8;
    private javax.swing.JLabel StockLabelOfItem10;
    private javax.swing.JLabel StockLabelOfItem11;
    private javax.swing.JLabel StockLabelOfItem12;
    private javax.swing.JLabel StockLabelOfItem13;
    private javax.swing.JLabel StockLabelOfItem3;
    private javax.swing.JLabel StockLabelOfItem8;
    private javax.swing.JLabel StockLabelOfItem9;
    private javax.swing.JButton ViewProduct1;
    private javax.swing.JButton ViewProduct2;
    private javax.swing.JButton ViewProduct3;
    private javax.swing.JButton ViewProduct4;
    private javax.swing.JButton ViewProduct5;
    private javax.swing.JButton ViewProduct6;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
